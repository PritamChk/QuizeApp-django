# Generated by Django 4.0.2 on 2022-02-16 18:14

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('subject', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='QuizEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, db_index=True, default=uuid.uuid4, max_length=300)),
                ('start_date', models.DateField(blank=True, db_index=True, default=datetime.date(2022, 2, 17))),
                ('start_time', models.TimeField(blank=True, db_index=True, default=datetime.time(23, 44, 23, 853323))),
                ('exam_duration', models.DurationField(blank=True, default=datetime.timedelta(seconds=3600))),
            ],
            options={
                'ordering': ['start_date', 'start_time', '-exam_duration', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=300)),
                ('last_name', models.CharField(max_length=300)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('username', models.CharField(db_index=True, max_length=60, unique=True)),
                ('password', models.CharField(max_length=300)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('classroom', models.ManyToManyField(blank=True, related_name='teachers', to='classroom.Classroom')),
            ],
            options={
                'ordering': ['first_name', 'last_name', '-joined_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=300)),
                ('last_name', models.CharField(max_length=300)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('username', models.CharField(db_index=True, max_length=60, unique=True)),
                ('password', models.CharField(max_length=300)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('classroom', models.ManyToManyField(blank=True, related_name='students', to='classroom.Classroom')),
            ],
            options={
                'ordering': ['first_name', 'last_name', '-joined_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QuizSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(blank=True, db_index=True, default=uuid.uuid4, max_length=300)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('difficulty_level', models.CharField(choices=[('E', 'Easy'), ('M', 'Medium'), ('H', 'Hard')], default='E', max_length=2)),
                ('author_teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quizsets', to='classroom.teacher')),
                ('quiz_event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quizsets', to='classroom.quizevent')),
            ],
            options={
                'ordering': ['-created_at', 'difficulty_level'],
            },
        ),
        migrations.AddField(
            model_name='quizevent',
            name='all_qsets',
            field=models.ManyToManyField(blank=True, related_name='quiz_event_part', to='classroom.QuizSet'),
        ),
        migrations.AddField(
            model_name='quizevent',
            name='host_classroom',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hosted_quizes', to='classroom.classroom'),
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_value', models.TextField()),
                ('point', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MaxValueValidator(15, 'Hya hya, 1ta mcq tei 100 marks diye dao,Ajob Public')])),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quizset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='qustions', to='classroom.quizset')),
            ],
            options={
                'ordering': ['point'],
            },
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option_value', models.CharField(blank=True, default='None Of The Above', max_length=500)),
                ('is_correct', models.BooleanField(default=False)),
                ('qustion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='classroom.question')),
            ],
        ),
        migrations.CreateModel(
            name='AnswerSet',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('quizevent', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='answer_sets', to='classroom.quizevent')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qid', models.IntegerField()),
                ('qzid', models.IntegerField()),
                ('optid', models.IntegerField()),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('answer_set', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='answers', to='classroom.answerset')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='classroom.student')),
            ],
        ),
    ]
